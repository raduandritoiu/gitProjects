<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" xmlns:view="framework.view.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import framework.model.EngineController;
			import framework.model.PointParticle;
			import framework.model.PointMobility;
			import framework.utils.CalculusUtils;
			
			import org.osmf.events.TimeEvent;
			
			
			private var p1:PointParticle = new PointParticle(500, 200);
			private var p2:PointParticle = new PointParticle(550, 200, PointMobility.FIXED);
			private var p3:PointParticle = new PointParticle(700, 100);
			private var p4:PointParticle = new PointParticle(700, 300);
			private var p5:PointParticle = new PointParticle(750, 200, PointMobility.FIXED);
			private var p6:PointParticle = new PointParticle(850, 150);
			private var p7:PointParticle = new PointParticle(800, 250);
			private var p8:PointParticle = new PointParticle(800, 500);
			
			private var engine:EngineController = new EngineController(p1, runFunction, false);
			
			
			private function runFunction(coord:Point):Point {
				var jx:Number = 550;
				var jy:Number = 200;
				var jointDist:Number = 50;
				
				var alfa:Number = CalculusUtils.arctan(coord.x, coord.y, jx, jy);
				alfa = alfa + 0.13;
				
				var newX:Number = jx + jointDist * Math.cos(alfa);
				var newY:Number = jy + jointDist * Math.sin(alfa);
				var newX_tmp:Number = jx - jointDist * Math.cos(alfa);
				var newY_tmp:Number = jy - jointDist * Math.sin(alfa);
				
				if (Math.abs(coord.x - newX) + Math.abs(coord.y - newY) > 
					Math.abs(coord.x - newX_tmp) + Math.abs(coord.y - newY_tmp)) {
					newX = newX_tmp;
					newY = newY_tmp;
				}
				
				coord.x = newX;
				coord.y = newY;
				
				return coord;
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup >
		<s:Button click="engine.step()" label="Step"/>
		<s:Button click="engine.start()" label="Start"/>
		<s:Button click="engine.stop()" label="Stop"/>
	</s:HGroup>
	
	
	<view:TriangleComp firstPoint="{p3}" secondPoint="{p5}" thirdPoint="{p6}"/>
	<view:TriangleComp firstPoint="{p7}" secondPoint="{p4}" thirdPoint="{p8}"/>
	
	<view:LineComp firstPoint="{p1}" secondPoint="{p2}" />
	<view:LineComp firstPoint="{p1}" secondPoint="{p3}" />
	<view:LineComp firstPoint="{p1}" secondPoint="{p4}" />
	<view:LineComp firstPoint="{p4}" secondPoint="{p5}" />
	<view:LineComp firstPoint="{p6}" secondPoint="{p7}" />
	
	<view:CircleComp centerPoint="{p2}" radius="50"/>
	<view:CircleComp centerPoint="{p2}" radius="1"/>
	<view:CircleComp centerPoint="{p1}" radius="3"/>
	
	
	<view:CircleTrailComp centerPoint="{p3}" radius="3"/>
	<view:CircleTrailComp centerPoint="{p4}" radius="3"/>
	<view:CircleTrailComp centerPoint="{p5}" radius="3"/>
	<view:CircleTrailComp centerPoint="{p6}" radius="3"/>
	<view:CircleTrailComp centerPoint="{p7}" radius="3"/>
	<view:CircleTrailComp centerPoint="{p8}" radius="3"/>

	

</s:Group>
